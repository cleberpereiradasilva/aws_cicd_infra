name: Terraform CI/CD

on:
  push:
    branches:
      - main
      - develop

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6

      - name: Set environment variables
        run: |
          if [ "${GITHUB_REF_NAME}" == "main" ]; then
            export AWS_REGION=${{ secrets.AWS_PRD_REGION }}
            export AWS_ACCESS_KEY=${{ secrets.AWS_PRD_ACCESS_KEY_ID }}
            export AWS_SECRET_KEY=${{ secrets.AWS_PRD_SECRET_ACCESS_KEY }}
            export S3_BUCKET=${{ secrets.AWS_CDK_PRD_S3 }}
            export WORKSPACE=prd
          else
            export AWS_REGION=${{ secrets.AWS_DEV_REGION }}
            export AWS_ACCESS_KEY=${{ secrets.AWS_DEV_ACCESS_KEY_ID }}
            export AWS_SECRET_KEY=${{ secrets.AWS_DEV_SECRET_ACCESS_KEY }}
            export S3_BUCKET=${{ secrets.AWS_CDK_DEV_S3 }}
            export WORKSPACE=dev
          fi
          echo "AWS_REGION=$AWS_REGION" >> $GITHUB_ENV
          echo "AWS_ACCESS_KEY=$AWS_ACCESS_KEY" >> $GITHUB_ENV
          echo "AWS_SECRET_KEY=$AWS_SECRET_KEY" >> $GITHUB_ENV
          echo "S3_BUCKET=$S3_BUCKET" >> $GITHUB_ENV
          echo "WORKSPACE=$WORKSPACE" >> $GITHUB_ENV

      - name: Check if S3 bucket has Terraform state
        id: check_bucket
        run: |
          if aws s3 ls s3://$S3_BUCKET/terraform.tfstate >/dev/null 2>&1; then
            echo "Bucket jÃ¡ tem Terraform state, pulando bootstrap"
            echo "RUN_BOOTSTRAP=false" >> $GITHUB_ENV
          else
            echo "Bucket vazio, rodando bootstrap"
            echo "RUN_BOOTSTRAP=true" >> $GITHUB_ENV
          fi

      - name: Terraform Init & Apply Bootstrap
        if: env.RUN_BOOTSTRAP == 'true'
        working-directory: bootstrap
        run: |
          terraform init -reconfigure
          terraform apply -auto-approve \
            -var="aws_region=$AWS_REGION" \
            -var="aws_access_key=$AWS_ACCESS_KEY" \
            -var="aws_secret_key=$AWS_SECRET_KEY" \
            -var="stage=$WORKSPACE"

      - name: Terraform Init Main
        working-directory: .
        run: |
          terraform init -reconfigure \
            -backend-config="bucket=${S3_BUCKET}" \
            -backend-config="key=terraform.tfstate" \
            -backend-config="region=${AWS_REGION}" \
            -backend-config="dynamodb_table=${WORKSPACE}-terraform-locks" \
            -backend-config="encrypt=true"

      - name: Select or Create Workspace
        working-directory: .
        run: |
          terraform workspace select $WORKSPACE || terraform workspace new $WORKSPACE

      - name: Terraform Plan
        working-directory: .
        run: |
          terraform plan \
            -var="stage=$WORKSPACE" \
            -var="aws_region=$AWS_REGION" \
            -var="aws_access_key=$AWS_ACCESS_KEY" \
            -var="aws_secret_key=$AWS_SECRET_KEY" \
            -var="s3_bucket=$S3_BUCKET"

      - name: Terraform Apply
        working-directory: .
        run: |
          terraform apply -auto-approve \
            -var="stage=$WORKSPACE" \
            -var="aws_region=$AWS_REGION" \
            -var="aws_access_key=$AWS_ACCESS_KEY" \
            -var="aws_secret_key=$AWS_SECRET_KEY" \
            -var="s3_bucket=$S3_BUCKET"
